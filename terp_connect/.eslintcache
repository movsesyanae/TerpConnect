[{"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/index.js":"1","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/MainPage.js":"2","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/CreateRouter.js":"3","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/NewSignUpSignIn.js":"4","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/Verification.js":"5","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/textingComponents/HomePage.js":"6","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignUpComponentMobile.js":"7","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/Course_Selector_Component/CourseSelector.js":"8","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignInComponentMobile.js":"9","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignIn.js":"10","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/Switcheroo.js":"11","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignUp.js":"12","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/aws-exports.js":"13","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/graphql/queries.js":"14","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/graphql/mutations.js":"15"},{"size":1184,"mtime":1611659276458,"results":"16","hashOfConfig":"17"},{"size":2080,"mtime":1611659464751,"results":"18","hashOfConfig":"17"},{"size":5237,"mtime":1611663491873,"results":"19","hashOfConfig":"17"},{"size":1163,"mtime":1611660356065,"results":"20","hashOfConfig":"17"},{"size":4423,"mtime":1611665506358,"results":"21","hashOfConfig":"17"},{"size":5052,"mtime":1611368824118,"results":"22","hashOfConfig":"17"},{"size":12134,"mtime":1611712856779,"results":"23","hashOfConfig":"17"},{"size":10994,"mtime":1611713691420,"results":"24","hashOfConfig":"17"},{"size":4348,"mtime":1611669832468,"results":"25","hashOfConfig":"17"},{"size":2894,"mtime":1611662699291,"results":"26","hashOfConfig":"17"},{"size":1621,"mtime":1611662504178,"results":"27","hashOfConfig":"17"},{"size":9025,"mtime":1611713433752,"results":"28","hashOfConfig":"17"},{"size":692,"mtime":1611667752801,"results":"29","hashOfConfig":"17"},{"size":3177,"mtime":1611667752229,"results":"30","hashOfConfig":"17"},{"size":2902,"mtime":1611667752285,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"e2i8oq",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/index.js",["72","73","74","75","76","77","78","79","80","81","82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NewSignUpSignIn from './SignUp_SignIn_Components/NewSignUpSignIn'\nimport MainPage from './MainPage'\nimport CreateRouter from './CreateRouter';\nimport CourseSelector from './Course_Selector_Component/CourseSelector'\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport SignUpComponentMobile from './SignUp_SignIn_Components/SignUpComponentMobile';\nimport VerificationPage from './SignUp_SignIn_Components/Verification';\nimport HomePage from './textingComponents/HomePage'\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from './aws-exports';\nAmplify.configure(awsconfig);\n\nReactDOM.render(\n  <React.StrictMode>\n\n    {/* <SignUpSliderComponent /> */}\n\n    {/* <SignUpComplete /> */}\n\n     <Router>\n      <CreateRouter />\n    </Router> \n  \n\n    {/* <NewSignUpSignIn/> */}\n\n\n   {/* <VerificationPage /> */}\n\n  {/* <SignUp_SignIn_Component_Mobile/> */}\n\n\t  {/* <CourseSelector /> */}\n\n    {/* <SignUpComponentMobile/> */}\n\n    {/* <MainPage/> */}\n    {/* <HomePage/> */}\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["83","84"],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/MainPage.js",["85","86","87","88"],"import React, {useEffect, useState} from 'react';\nimport './mainPage.scss'\nimport {Auth, API, graphqlOperation} from 'aws-amplify'\n\n\nconst MainPage = (props) => {\n\n\n    useEffect(() => {\n        checkUser();\n    }, [])\n\n    async function checkUser() {\n        console.log('doing this ');\n        try {\n            await Auth.currentSession();\n        } catch(error) {\n            props.returnObject({nextPage: 'sign-out', message: 'not signed in in main-page', error: error});\n        }\n\n    }\n\n    return(\n\n    <div id='menuOuterScreen'>\n        <div id='areaBox'>\n            <div id='title'>\n                <p>Welcome to Course Connect</p>\n            </div>\n            <div id='text1'>\n                <p>We're still working on the website, but don't worry - you'll be able to talk to your classmates soon (next monday..hopefully..)</p>\n            </div>\n            <div id='text2'>\n                <p>Every week you get paired with one person from each of your classes.<br/>Please update your classes if you have not yet done so</p>\n            </div>\n            <div id = 'btn-and-btn'>\n            <button id='btn1' onClick = {(e) => {props.returnObject({nextPage: 'course-selection'})}}> Update Classes </button>\n            <button id='btn2' onClick = {(e) => {props.returnObject({nextPage: 'sign-out'})}}> Sign Out </button>\n            </div>\n        </div>\n    </div>\n        \n        // <div className = 'main-page' id='mainBox'>\n        //     <h2> Welcome to Course Connect </h2>\n        //     <p> We're still working on the website, but don't worry - you'll be able to talk to your classmates soon</p>\n        //     <div id = 'description'>\n        //         <h4>How it works</h4>\n        //         <p>fgkfdkjgfkgnknsdfk <br />jsdfdsfsfsfsddssdfn</p>\n        //     </div>\n        //     <button onClick = {(e) => {props.returnObject({nextPage: 'course-selection'})}}> Update Classes </button>\n        //     <button onClick = {(e) => {props.returnObject({nextPage: 'sign-out'})}}> Sign Out </button>\n        // </div>\n    );\n\n}\n\nexport default MainPage;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/CreateRouter.js",["89"],"import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\n\nimport SignUpPackage from './SignUp_SignIn_Components/NewSignUpSignIn';\nimport SignUpComponentMobile from './SignUp_SignIn_Components/SignUpComponentMobile';\nimport SignInComponentMobile from './SignUp_SignIn_Components/SignInComponentMobile';\nimport CourseSelector from './Course_Selector_Component/CourseSelector';\nimport Verification from './SignUp_SignIn_Components/Verification';\nimport {isMobile} from 'react-device-detect';\nimport MainPage from './MainPage';\nimport { Auth } from 'aws-amplify';\n\n\n\nconst CreateRouter = () => {\n\n    const [currentPage, setCurrentPage] = useState('');\n    // const [user, setUser] = useState(null);\n    const [verified, setVerified] = useState(false);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const history = useHistory();\n    \n\n    useEffect(() => {\n        checkUser();\n    }, [])\n\n    async function checkUser() {\n        console.log('doing this ');\n        try {\n            // const x = await Auth.currentSession();\n            // console.log('well damn', x);\n            const user = await Auth.currentAuthenticatedUser();\n            console.log('user:', user);\n            console.log(user['attributes']['email']);\n            setVerified(true);\n            setEmail(user['attributes']['email']);\n        } catch(error) {\n            setVerified(false);\n            setEmail(null);\n            setPassword(null);\n            console.log('got an error', error);\n        }\n\n    }\n\n    const handleReturn = (returnObject) => {\n        if (returnObject['nextPage'] === 'confirm-email') {\n            setEmail(returnObject['email']);\n            setPassword(returnObject['password']);\n            setCurrentPage('confirm-email');\n            console.log('this be a good place to be');\n            history.push('/verification');\n        } else if (returnObject['nextPage'] === 'course-selection') {\n            history.push('/courses');\n        } else if (returnObject['nextPage'] === 'home-page') {\n            history.push('/main');\n\n        } else if (returnObject['nextPage'] === 'sign-out') {\n            Auth.signOut();\n            setEmail(null);\n            setVerified(false);\n            setPassword(null);\n            setCurrentPage('');\n            history.push('/');\n        }\n    }\n\n \n\n    return(\n        <div>\n\n            \n            {/* { email ?  \n            <h1>User: {email}</h1> : null\n            }\n             */}\n\n            {/* <Router> */}\n                <Switch>\n                    {/* <Route exact path = '/' render = {() => <SignUpSliderComponent user = {(user) => setUser(user)} verified = {(value) => handleAfterSignIn(value)}  />} />  */}\n                    <Route exact path = '/'> \n                        {/* {isMobile ? <Redirect to = '/sign-up-mobile' /> : <SignUpPackage logIn = {(value) => handleLogIn(value)} />} */}\n                        {isMobile ? <Redirect to = '/sign-up-mobile' /> : <SignUpPackage returnObject = {handleReturn} updateVerified = {(value) => setVerified(value)} />}\n                    </Route>\n                    \n                    {/* <Route exact path = '/courses' render = {() => <CourseSelector nextPage = {(value) => handleNextPage(value)} user = {user}/>}/> */}\n                    <Route exact path = '/courses' render = { () => (\n                        <CourseSelector returnObject = {handleReturn} />\n                    )} /> \n                        {/* <CourseSelector email = {email} returnObject = {handleReturn} /> */}\n                    {/* </Route> */}\n                    \n                    <Route exact path = '/verification'> \n                        {email && password && !verified && currentPage === 'confirm-email' ? <Verification email = {email} password = {password} returnObject = {handleReturn} /> : <Redirect to = '/' /> }\n                    </Route>\n\n                    <Route exact path = '/sign-up-mobile'> \n                        {/* {user ? <Verification /> : <h1>damn</h1>} */}\n                        {/* {!isMobile ? <Redirect to = '/' /> : <SignUpComponentMobile logIn = {(value) => handleLogIn(value)} user = {(user) => handleLogIn(user)}  />} */}\n                        {!isMobile ? <Redirect to = '/' /> : <SignUpComponentMobile returnObject = {handleReturn}/>}\n                    </Route>\n                    \n                    <Route exact path = '/sign-in-mobile'> \n                        {/* {!isMobile ? <Redirect to = '/' /> : <SignInComponentMobile logIn = {(value) => handleLogIn(value)} user = {(user) => handleLogIn(user)}  />} */}\n                        {!isMobile ? <Redirect to = '/' /> : <SignInComponentMobile returnObject = {handleReturn}/>}\n                    </Route>\n\n                    <Route exact path = '/main'>\n                        {/* {user === null ? <Redirect to = '/' /> : <MainPage returnObject = {handleReturn} />} */}\n                        <MainPage returnObject = {handleReturn} />\n                    </Route>\n                </Switch>\n            {/* </Router> */}\n        </div>\n    );\n}\n\nexport default CreateRouter;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/NewSignUpSignIn.js",["90","91","92","93","94","95","96","97","98","99"],"import {useState, useEffect, useRef, useImperativeHandle} from 'react'\nimport './newSignUpIn.scss';\nimport { Auth } from 'aws-amplify';\nimport SignUp from './SignUp'\nimport SignIn from './SignIn'\nimport Switcheroo from './Switcheroo'\n\n\nconst NewSignUpSignIn = (props) => {\n    const [needsConfirm, setNeedsConfirm] = useState(false);\n    const [authCode, setAuthCode] = useState('');\n    const [backUpEmail, setBackUpEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n\n    \n\n    const MessageBox = () => {\n        return (\n            <div id='entry-alert' >\n                <ref className=\"closebtn\" onClick = {(e) => setMessage('')}>&times;</ref>\n                {message}\n            </div> \n        );\n    }\n\n    return(\n        <div id = \"newOuterBox\">\n            \n            <SignUp returnObject = {(value) => props.returnObject(value)} message = {(value) => setMessage(value)} />\n            <SignIn returnObject = {(value) => props.returnObject(value)} message = {(value) => setMessage(value)} />\n            <Switcheroo/>\n            {message !== '' ? <MessageBox /> : null}\n        </div>\n    );\n\n}\nexport default NewSignUpSignIn;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/Verification.js",["100","101","102","103","104","105","106","107","108","109"],"import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport './VerificationPageStyle.scss';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport * as mutations from '../graphql/mutations'\n\nconst Verification = (props) => {\n    const [code, setCode] = useState('');\n\n    useEffect(() => {\n        checkUser();\n    }, [])\n\n    async function checkUser() {\n        console.log('doing this ');\n        try {\n            // const x = await Auth.currentSession();\n            // console.log('well damn', x);\n            const user = await Auth.currentAuthenticatedUser();\n            console.log('already verified in verification page', user['attributes']['email']);\n            props.returnObject({nextPage: 'sign-out', message: 'already verified in email confirmation page'});            \n        } catch(error) {\n        }\n\n    }\n\n    const createUser = async() => {\n        \n    \n    }\n\n    async function handleSubmit(e) {\n\n        try {\n            // confirm the email address\n            await Auth.confirmSignUp(props.email, code);\n            \n            // sign in user\n            let userSignedIn = await Auth.signIn(props.email, props.password);\n            console.log(userSignedIn);\n            \n            // get user's information\n            const currentUserInfo = await Auth.currentUserInfo()\n            const email = currentUserInfo.attributes['email']\n\n            const name = currentUserInfo.attributes['custom:name'];\n            const gender = currentUserInfo.attributes['custom:gender'];\n            const bio = currentUserInfo.attributes['custom:bio'];\n            \n            var lookingForList = [];\n            if (currentUserInfo.attributes['custom:lookingForSB'] == 'true'){\n                lookingForList.push('Study Buddy');\n            }\n            if (currentUserInfo.attributes['custom:lookingForF'] == 'true'){\n                lookingForList.push('Friend');\n            }\n            if (currentUserInfo.attributes['custom:lookingForSF'] == 'true'){\n                lookingForList.push('Friend ;)');\n            }\n            let x = {name, email, gender, bio, lookingForList}\n\n            console.log(x);\n\n            // push the users information to dynamodb with graphql\n            let user = {id: email, bio: bio, courseList: [], gender: gender, lookingForList: lookingForList, name: name, matches: [] }\n            await API.graphql(graphqlOperation(mutations.createUser, { input: user }))\n            console.log('item created!')\n            \n\n\n            // go back to router with next page\n            props.returnObject({\n                nextPage: 'home-page'\n            });\n\n\n         \n\n\n\n\n        } catch (error) {\n            console.log('in verification', error);\n            props.returnObject({\n                nextPage: 'sign-out',\n                message: 'something went wrong during email verification',\n                error: error\n            });\n        }\n\n    }\n\n    return(\n        <div id='outerScreen'>\n                <div id='areaBox'>\n                    <div id='title'>\n                        <p>Please Verify</p>\n                    </div>\n                    <div id='text'>\n                        <p>Please check your umd email for <br/> an email from us containing your security code</p>\n                    </div>\n                    <div id = 'input-and-submit'>\n                        <input type = 'number' pattern = '\\d*' placeholder = 'code' value = {code} onChange = {(e) => setCode(e.target.value)}/>\n                        <button type = 'submit' onClick = {(e) => handleSubmit(e)} >Submit Code</button>\n                    </div>\n                </div>\n            </div>\n        // <body >\n        //     <div className = 'verification-page'>\n        //         <h3> We need to verify your email </h3>\n        //         <h4> Please check your umd email to for an email from us containing your security code </h4>\n        //         <div className = 'input-and-submit'>\n        //             <input type = 'number' pattern = '\\d*' placeholder = 'code' value = {code} onChange = {(e) => setCode(e.target.value)}/>\n        //             <button type = 'submit' onClick = {(e) => handleSubmit(e)} >Submit Code</button>\n        //         </div>\n        //     </div>\n        // </body>\n    );\n\n}\n\nexport default Verification;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/textingComponents/HomePage.js",["110","111","112","113","114","115","116","117","118"],"import React, {useState, useEffect} from 'react';\nimport './homePage.scss'\nimport axios from 'axios'\n\nconst HomePage = () => {\n    const [dataFile, setDataFile] = useState({});\n    const [textList, setTextList] = useState([]);\n    const [currentUser, setCurrentUser] = useState(4);\n    const [currentConvo, setCurrentConvo] = useState(\"323\");\n    const [rerun, setRerun] = useState(0);\n\n    function textHandler (event) {\n        if(event.key === 'Enter' && !(event.shiftKey)){\n            event.preventDefault();\n            console.log(event);\n            event.target.value='';\n            // alert('deez nuts')\n        }\n    }\n\n     function loadTexts() {\n        //will have to change when connected to the server\n        // fetch('../grace.json').then(response => response.json()).then(data => {console.log('attempting to display JSON');console.log(data)});\n        \n        // var textData = require('../grace.json');\n        // textData = textData.parse(textData);\n        // console.log(textData);\n        // setTextList(textData.texts);\n        // console.log(textList);\n        for(let convo in dataFile) {\n            if(dataFile[convo][\"convoId\"] == currentConvo) {\n                setTextList(dataFile[convo][\"texts\"]);\n            }\n        }\n    }\n\n    const DisplayMessages = () => {\n        if(textList.length > 0){\n            return (\n                <div id='messageArea'>\n                    <div id ='innerMessageArea'>\n                    {textList.map((text,index) => <DisplayMessage number={index} key = {index}/>)}\n                    </div>\n                </div>\n            );\n        } else {\n            return <></>\n        }\n    }\n\n    const DisplayMessage = (props) => {\n        if(textList[props.number].from == currentUser)\n        {\n            return (\n                <div id='messageBoxRec'>\n                    <p>{textList[props.number].message}</p>\n                </div>);\n        } else {\n            return (\n                <div id='messageBoxSend'>\n                    <p>{textList[props.number].message}</p>\n                </div>);\n        }\n        \n    }\n\n    function contactClickHandler (obj) {\n        console.log(\"attempting to switch texts from: \" + obj[\"convoId\"]);\n        setCurrentConvo(obj[\"convoId\"]);\n        \n    }\n\n    const DisplayContacts = () => {\n        \n        console.log(dataFile);\n        if(dataFile.length > 0) {\n            console.log('attempting to return')\n\n            let arr = dataFile.map((obj,index) => <a href=\"#\" onClick={(e) => {e.preventDefault();contactClickHandler(obj)}}><ContactBox focus={obj} key={index} /> </a>);\n            arr[0] = <a href=\"#\" onClick={(e) => {e.preventDefault();contactClickHandler(dataFile[0])}}><div id='contactBoxFirst'><p>{dataFile[0][\"convoId\"]}</p></div></a>\n            arr[arr.length-1] = <a href=\"#\" onClick={(e) => {e.preventDefault();contactClickHandler(dataFile[dataFile.length - 1])}}><div id='contactBoxLast'><p>{dataFile[dataFile.length - 1][\"convoId\"]}</p></div></a>\n\n           \n\n            return( \n                <div id='overFlowBox'>\n                <div id='innerChatSelectBox'>\n                {\n                // dataFile.map((obj,index) => <a href=\"#\" onClick={(e) => {e.preventDefault();contactClickHandler(obj)}}><ContactBox focus={obj} key={index} /> </a>)\n                arr\n                }\n                </div>\n                </div>\n            );\n        } else {\n            return <></>\n        }\n    }\n    \n    const ContactBox = (props) => {\n        console.log(props.focus);\n        return (\n            <div id='contactBox'>\n                <p>{props.focus[\"convoId\"]}</p>\n            </div>\n        )\n    }\n\n    const ContactInfoBox = () => {\n        return(\n            <div id = 'contactInfoBox'>\n                <div><p>Name: </p></div>\n                <div><p>Shared courses: </p></div>\n                <div><p>Looking for: </p></div>\n                <div><p>Bio: </p></div>\n                <div><p>Gender: </p></div>\n                \n            </div>\n        )\n    }\n    \n    const fetchData = async () => {\n        const result = await axios.get('grace.json');\n        const data = await result.data;\n        \n        return data;\n        \n    }\n    \n    useEffect(async () => {\n        \n       let data = await fetchData();\n       setDataFile(data);\n       loadTexts();\n\n       if(rerun == 0) {\n           setRerun(1);\n       }\n    },[rerun,currentConvo])\n\n\n\n    return (\n        <div id='outerHomePage'>\n            <div id='upperContent'>\n                <h1>Terp Connect</h1>\n            </div>\n            <div id = 'chatSelectBox'>\n                <DisplayContacts/>\n                <ContactInfoBox/>\n            </div>\n\n            <div id = 'chatBox'>\n                <DisplayMessages />\n                <div id='writingBox'>\n                        <textarea placeholder = 'Send a message!' onKeyPress = {(event) => {textHandler(event);}}>\n                        </textarea>\n                </div>\n\n            </div>\n        </div>\n    ); \n}\n\nexport default HomePage;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignUpComponentMobile.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/Course_Selector_Component/CourseSelector.js",["137","138","139","140","141"],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignInComponentMobile.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import {useState,useEffect,useRef} from 'react'\nimport SignIn from './SignIn'\n\nimport './SignInStyleMobile.scss'\nimport SignUp from './SignUp'\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory, Link } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\n\nconst SignUpComponentMobile = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\tconst [signUpFailMessage, setSignUpFailMessage] = useState('');\n\tconst whereWeAt = useRef(document.getElementById('name'));\n\n\n\n\n\t\n\tconst ErrorPopUp = () => {\n\t\tif(signUpFailMessage !== '') {\n\t\t\treturn (\n\t\t\t\t// <div class = 'entry-mobile' id='errorBox'>\n\t\t\t\t// \t<p>{signUpFailMessage}</p>\n\t\t\t\t// </div>\n\n\t\t\t\t<div className=\"alert\" ref={whereWeAt} id='alert-mobile'>\n                <ref className=\"closebtn\" onClick = {() => {setSignUpFailMessage(''); window.scrollTo(0,0);}}>&times;</ref>\n                {signUpFailMessage}\n            </div> \n\t\t\t);\n\t\t} else {\n\t\t\treturn (<></>);\n\t\t}\n\t}\n\t\n\tasync function submitHandler (e) {\n        e.preventDefault();\n\n        let stringInputs = [email,password];\n        let submitPass = true;  //as long as true should succefully submit\n\n        if(email == '' || password == '') {\n\t\t\t// props.failMessage('You have not selected all fields');\n\t\t\tsetSignUpFailMessage('You have not selected all fields');\n            submitPass = false;\n            return;\n\t\t}\n\t\t\n\n        for(let x in stringInputs) { //injection prevention\n            if(stringInputs[x].includes('\\'') || stringInputs[x].includes('<') || stringInputs[x].includes('>')) {\n\t\t\t\tsetSignUpFailMessage('Stop hacking ;)');\n                // props.failMessage('You may not include symbols such as \\' or < >');\n                submitPass = false;\n                return;\n            }\n        }\n\n\n     \n\t\t//check servers return here\n\t\t\n\n\t\ttry {\n            const user = await Auth.signIn(email, password);\n            console.log(user);\n            props.returnObject({\n                nextPage: 'home-page'\n            });\n        } catch (error) {\n            console.log('error signing in', error);\n            if(error['code'] === 'UserNotConfirmedException' ) {\n                //User hasnt verified email\n                Auth.resendSignUp(email);\n\n                props.returnObject({\n                    nextPage: 'confirm-email',\n                    email: email,\n                    password: password\n                });\n            } else {\n                setSignUpFailMessage('Incorrect email or password');\n                return;\n            }\n        }\n\n    \n    }\n\n    const createUser = () => {\n        const crypto = require('crypto'); \n        const hash = crypto.createHash('sha256');\n        const id = hash.update('email', 'binary').digest('hex');\n        const passHash = hash.update('password', 'binary').digest('hex');\n        // const user = {id: id, passHash: passHash};\n        const user = {id: email, passHash: password};\n        return user;\n\n    }\n\n    const createRequestJSON = () => {\n        const user = createUser(); \n        const grace = {user: user, action: 1};\n        console.log(grace);\n        return grace;\n    }\n\t\n\n    return(\n\t\t\t<div className = 'entry-mobile page-container'>\n\n\t\t\t\t\t<div className = 'entry-mobile grid-unit1'>\n\t\t\t\t\t\t<h1 id='cCLabel'className = 'entry-mobile course-connect'>Course Connect</h1>\n\t\t\t\t\t\t<p>New User? <Link to = '/sign-up-mobile' id =\"signInLink\">Sign up</Link></p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ErrorPopUp/>\n\n\t\t\t\t\t \n\t\t\t\t\t\n\n\t\t\t\t\t<div className = 'entry-mobile grid-unit3'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"entry-mobile\"\n\t\t\t\t\t\ttype = 'text' \n\t\t\t\t\t\tid = 'email' \n\t\t\t\t\t\tname = 'email'\n\t\t\t\t\t\tplaceholder = 'email' \n\t\t\t\t\t\tvalue = {email} \n\t\t\t\t\t\tonChange = { (e) => setEmail(e.target.value) } \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className = 'entry-mobile grid-unit4'>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"entry-mobile\"\n\t\t\t\t\t\ttype = 'password' \n\t\t\t\t\t\tid = 'password' \n\t\t\t\t\t\tname = 'password'\n\t\t\t\t\t\tplaceholder = \"password\" \n\t\t\t\t\t\tvalue = {password} \n\t\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)} \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\n\n\t\t\t\t\t\n\n\n\t\t\t\t\t\n\n\t\t\t\t\t<div className = 'entry-mobile grid-unit8'>\n\t\t\t\t\t\t<button className=\"entry-mobile\" type = 'submit' onClick = { (e) => {submitHandler(e);} }> Sign In </button>\n\t\t\t\t\t</div>\n\n\t\t\t</div> \n    );\n}\n\nexport default SignUpComponentMobile;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignIn.js",["156","157"],"import React, { useState, useEffect} from 'react';\nimport './newSignUpIn.scss';\nimport axios from 'axios'\nimport { Auth } from 'aws-amplify';\n\n\n\nconst SignIn = (props) => {\n    const [signUpFields,setSignUpFields] = \n    useState({email:'',password:''});\n    \n    async function handleSignIn(e) {\n        console.log('sign up init');\n        e.preventDefault();\n\n        let inputs = [signUpFields.email, signUpFields.password];\n        var i;\n\n        if(signUpFields.email.length < 1 || signUpFields.password.length < 1){\n            props.message('Please complete all fields');\n            return;\n        }\n\n        for(i = 0; i < inputs.length; i++){\n            if(inputs[i].includes('\\'') || inputs[i].includes('<') || inputs[i].includes('>')) {\n                props.message('nice try bru');\n                return;\n            }\n        }\n\n        \n        try {\n            const user = await Auth.signIn(signUpFields.email, signUpFields.password);\n            console.log(user);\n            props.returnObject({\n                nextPage: 'home-page'\n            });\n        } catch (error) {\n            console.log('error signing in', error);\n            if(error['code'] === 'UserNotConfirmedException' ) {\n                //User hasnt verified email\n                console.log('i want grace');\n                Auth.resendSignUp(signUpFields.email);\n\n                props.returnObject({\n                    nextPage: 'confirm-email',\n                    email: signUpFields.email,\n                    password: signUpFields.password\n                });\n            } else {\n                props.message('Incorrect email or password');\n                return;\n            }\n        }\n        \n    }\n\n    return (\n        <div id = 'newSignInBox'>\n        <div id='height-box'>\n            <div id='Label-field'>\n                <label><h1>Sign In</h1></label>\n            </div>\n\n            <div id='email-field'>\n                <input \n                        type = 'text'  \n                        name = 'email'\n                        placeholder = 'email' \n                        value = {signUpFields.email} \n                        onChange = { (e) => setSignUpFields({...signUpFields,email:e.target.value}) } \n                    /> \n            </div>\n\n            <div id='password-field'>\n                <input \n                        type = 'password'  \n                        name = 'password'\n                        placeholder = 'password' \n                        value = {signUpFields.password} \n                        onChange = { (e) => setSignUpFields({...signUpFields,password:e.target.value}) }\n                    /> \n            </div>\n\n            <div id='submit-field'>\n                <button type = 'submit' onClick = { handleSignIn }> Sign In </button>\n            </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default SignIn;\n","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/Switcheroo.js",["158","159"],"import {useState} from 'react';\nimport {motion} from \"framer-motion\"\nimport './newSignUpIn.scss';\n\nconst Switcheroo = () => {\n    const [titleText,setTitleText] = useState('Welcome to TerpConnect');\n    const [descripText,setDescripText] = useState('Meet people in your classes!');\n    const [btnText,setBtnText] = useState('Sign Up');\n    const [sideA,setSideA] = useState(false);\n\n    const variants = {\n        init: {x: '100%'},\n        left: {x: '0%'},\n        right: {x:'100%'}\n\n        // init: {opacity: 0},\n        // left: {opacity: 0},\n        // right: {opacity:1}\n    }\n\n    function onClickHandler(e) {\n        e.preventDefault();\n        setSideA(!sideA);\n        console.log('clicked btn');\n\n        if(sideA){\n            setBtnText('Sign Up')\n        } else {\n            setBtnText('Sign In')\n        }\n\n    }\n\n    return (\n        <div id='positionBox'>\n            <motion.div id='switchBox'\n            variants = {variants}\n            initial = \"init\"\n            animate = {(sideA) ? \"left\" : \"right\"}\n            transition={{type:'spring',delay:0.1}}\n            >\n                <div id='height-box'>\n                    <div id='title-tag'>\n                        <h1>{titleText}</h1>\n                    </div>\n\n                    <div id='descrip-text'>\n                        <p>{descripText}</p>\n                    </div>\n\n                    <div id='switch-btn'>\n                        <button onClick = {(e) => {onClickHandler(e)}}> {btnText} </button>\n                    </div>\n                </div>\n            </motion.div>\n        </div>\n    );\n}\nexport default Switcheroo;","/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/SignUp_SignIn_Components/SignUp.js",["160","161","162"],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/aws-exports.js",[],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/graphql/queries.js",[],"/home/alex/github/Course_Connect/Course-Connect/terp_connect/src/graphql/mutations.js",[],{"ruleId":"163","severity":1,"message":"164","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":23},{"ruleId":"163","severity":1,"message":"167","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":16},{"ruleId":"163","severity":1,"message":"168","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":22},{"ruleId":"163","severity":1,"message":"169","line":8,"column":35,"nodeType":"165","messageId":"166","endLine":8,"endColumn":41},{"ruleId":"163","severity":1,"message":"170","line":8,"column":43,"nodeType":"165","messageId":"166","endLine":8,"endColumn":48},{"ruleId":"163","severity":1,"message":"171","line":8,"column":50,"nodeType":"165","messageId":"166","endLine":8,"endColumn":58},{"ruleId":"163","severity":1,"message":"172","line":8,"column":60,"nodeType":"165","messageId":"166","endLine":8,"endColumn":70},{"ruleId":"163","severity":1,"message":"173","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":29},{"ruleId":"163","severity":1,"message":"174","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":24},{"ruleId":"163","severity":1,"message":"175","line":11,"column":8,"nodeType":"165","messageId":"166","endLine":11,"endColumn":16},{"ruleId":"163","severity":1,"message":"176","line":12,"column":19,"nodeType":"165","messageId":"166","endLine":12,"endColumn":23},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"163","severity":1,"message":"181","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":35},{"ruleId":"163","severity":1,"message":"182","line":3,"column":15,"nodeType":"165","messageId":"166","endLine":3,"endColumn":18},{"ruleId":"163","severity":1,"message":"183","line":3,"column":20,"nodeType":"165","messageId":"166","endLine":3,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":11,"column":8,"nodeType":"186","endLine":11,"endColumn":10,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"188","line":2,"column":27,"nodeType":"165","messageId":"166","endLine":2,"endColumn":33},{"ruleId":"163","severity":1,"message":"189","line":1,"column":19,"nodeType":"165","messageId":"166","endLine":1,"endColumn":28},{"ruleId":"163","severity":1,"message":"190","line":1,"column":30,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"191","line":1,"column":38,"nodeType":"165","messageId":"166","endLine":1,"endColumn":57},{"ruleId":"163","severity":1,"message":"176","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"192","line":10,"column":12,"nodeType":"165","messageId":"166","endLine":10,"endColumn":24},{"ruleId":"163","severity":1,"message":"193","line":10,"column":26,"nodeType":"165","messageId":"166","endLine":10,"endColumn":41},{"ruleId":"163","severity":1,"message":"194","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":20},{"ruleId":"163","severity":1,"message":"195","line":11,"column":22,"nodeType":"165","messageId":"166","endLine":11,"endColumn":33},{"ruleId":"163","severity":1,"message":"196","line":12,"column":12,"nodeType":"165","messageId":"166","endLine":12,"endColumn":23},{"ruleId":"163","severity":1,"message":"197","line":12,"column":25,"nodeType":"165","messageId":"166","endLine":12,"endColumn":39},{"ruleId":"163","severity":1,"message":"188","line":2,"column":27,"nodeType":"165","messageId":"166","endLine":2,"endColumn":33},{"ruleId":"163","severity":1,"message":"169","line":2,"column":35,"nodeType":"165","messageId":"166","endLine":2,"endColumn":41},{"ruleId":"163","severity":1,"message":"170","line":2,"column":43,"nodeType":"165","messageId":"166","endLine":2,"endColumn":48},{"ruleId":"163","severity":1,"message":"171","line":2,"column":50,"nodeType":"165","messageId":"166","endLine":2,"endColumn":58},{"ruleId":"163","severity":1,"message":"172","line":2,"column":60,"nodeType":"165","messageId":"166","endLine":2,"endColumn":70},{"ruleId":"184","severity":1,"message":"185","line":12,"column":8,"nodeType":"186","endLine":12,"endColumn":10,"suggestions":"198"},{"ruleId":"163","severity":1,"message":"199","line":27,"column":11,"nodeType":"165","messageId":"166","endLine":27,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":51,"column":67,"nodeType":"202","messageId":"203","endLine":51,"endColumn":69},{"ruleId":"200","severity":1,"message":"201","line":54,"column":66,"nodeType":"202","messageId":"203","endLine":54,"endColumn":68},{"ruleId":"200","severity":1,"message":"201","line":57,"column":67,"nodeType":"202","messageId":"203","endLine":57,"endColumn":69},{"ruleId":"163","severity":1,"message":"204","line":8,"column":25,"nodeType":"165","messageId":"166","endLine":8,"endColumn":39},{"ruleId":"200","severity":1,"message":"201","line":31,"column":43,"nodeType":"202","messageId":"203","endLine":31,"endColumn":45},{"ruleId":"200","severity":1,"message":"201","line":52,"column":40,"nodeType":"202","messageId":"203","endLine":52,"endColumn":42},{"ruleId":"205","severity":1,"message":"206","line":79,"column":51,"nodeType":"207","endLine":79,"endColumn":126},{"ruleId":"205","severity":1,"message":"206","line":80,"column":22,"nodeType":"207","endLine":80,"endColumn":105},{"ruleId":"205","severity":1,"message":"206","line":81,"column":33,"nodeType":"207","endLine":81,"endColumn":134},{"ruleId":"184","severity":1,"message":"208","line":130,"column":15,"nodeType":"209","endLine":139,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":136,"column":17,"nodeType":"202","messageId":"203","endLine":136,"endColumn":19},{"ruleId":"184","severity":1,"message":"210","line":139,"column":7,"nodeType":"186","endLine":139,"endColumn":27,"suggestions":"211"},{"ruleId":"163","severity":1,"message":"212","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"213","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":14},{"ruleId":"163","severity":1,"message":"188","line":8,"column":27,"nodeType":"165","messageId":"166","endLine":8,"endColumn":33},{"ruleId":"163","severity":1,"message":"169","line":8,"column":35,"nodeType":"165","messageId":"166","endLine":8,"endColumn":41},{"ruleId":"163","severity":1,"message":"170","line":8,"column":43,"nodeType":"165","messageId":"166","endLine":8,"endColumn":48},{"ruleId":"163","severity":1,"message":"171","line":8,"column":50,"nodeType":"165","messageId":"166","endLine":8,"endColumn":58},{"ruleId":"163","severity":1,"message":"172","line":8,"column":60,"nodeType":"165","messageId":"166","endLine":8,"endColumn":70},{"ruleId":"200","severity":1,"message":"201","line":55,"column":20,"nodeType":"202","messageId":"203","endLine":55,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":99,"column":16,"nodeType":"202","messageId":"203","endLine":99,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":99,"column":30,"nodeType":"202","messageId":"203","endLine":99,"endColumn":32},{"ruleId":"200","severity":1,"message":"201","line":99,"column":45,"nodeType":"202","messageId":"203","endLine":99,"endColumn":47},{"ruleId":"200","severity":1,"message":"201","line":99,"column":63,"nodeType":"202","messageId":"203","endLine":99,"endColumn":65},{"ruleId":"200","severity":1,"message":"201","line":99,"column":88,"nodeType":"202","messageId":"203","endLine":99,"endColumn":90},{"ruleId":"200","severity":1,"message":"201","line":99,"column":177,"nodeType":"202","messageId":"203","endLine":99,"endColumn":179},{"ruleId":"200","severity":1,"message":"201","line":120,"column":17,"nodeType":"202","messageId":"203","endLine":120,"endColumn":19},{"ruleId":"163","severity":1,"message":"214","line":209,"column":15,"nodeType":"165","messageId":"166","endLine":209,"endColumn":17},{"ruleId":"163","severity":1,"message":"215","line":210,"column":15,"nodeType":"165","messageId":"166","endLine":210,"endColumn":23},{"ruleId":"163","severity":1,"message":"216","line":216,"column":11,"nodeType":"165","messageId":"166","endLine":216,"endColumn":28},{"ruleId":"163","severity":1,"message":"217","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":22},{"ruleId":"163","severity":1,"message":"218","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":30,"column":8,"nodeType":"186","endLine":30,"endColumn":10,"suggestions":"219"},{"ruleId":"163","severity":1,"message":"220","line":64,"column":15,"nodeType":"165","messageId":"166","endLine":64,"endColumn":20},{"ruleId":"163","severity":1,"message":"221","line":134,"column":11,"nodeType":"165","messageId":"166","endLine":134,"endColumn":25},{"ruleId":"163","severity":1,"message":"189","line":1,"column":18,"nodeType":"165","messageId":"166","endLine":1,"endColumn":27},{"ruleId":"163","severity":1,"message":"212","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"213","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":14},{"ruleId":"163","severity":1,"message":"188","line":6,"column":27,"nodeType":"165","messageId":"166","endLine":6,"endColumn":33},{"ruleId":"163","severity":1,"message":"169","line":6,"column":35,"nodeType":"165","messageId":"166","endLine":6,"endColumn":41},{"ruleId":"163","severity":1,"message":"170","line":6,"column":43,"nodeType":"165","messageId":"166","endLine":6,"endColumn":48},{"ruleId":"163","severity":1,"message":"171","line":6,"column":50,"nodeType":"165","messageId":"166","endLine":6,"endColumn":58},{"ruleId":"163","severity":1,"message":"172","line":6,"column":60,"nodeType":"165","messageId":"166","endLine":6,"endColumn":70},{"ruleId":"200","severity":1,"message":"201","line":42,"column":18,"nodeType":"202","messageId":"203","endLine":42,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":42,"column":36,"nodeType":"202","messageId":"203","endLine":42,"endColumn":38},{"ruleId":"163","severity":1,"message":"222","line":54,"column":17,"nodeType":"165","messageId":"166","endLine":54,"endColumn":27},{"ruleId":"163","severity":1,"message":"214","line":93,"column":15,"nodeType":"165","messageId":"166","endLine":93,"endColumn":17},{"ruleId":"163","severity":1,"message":"215","line":94,"column":15,"nodeType":"165","messageId":"166","endLine":94,"endColumn":23},{"ruleId":"163","severity":1,"message":"216","line":101,"column":11,"nodeType":"165","messageId":"166","endLine":101,"endColumn":28},{"ruleId":"163","severity":1,"message":"189","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"223","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"224","line":6,"column":22,"nodeType":"165","messageId":"166","endLine":6,"endColumn":34},{"ruleId":"163","severity":1,"message":"225","line":7,"column":24,"nodeType":"165","messageId":"166","endLine":7,"endColumn":38},{"ruleId":"163","severity":1,"message":"223","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"226","line":14,"column":12,"nodeType":"165","messageId":"166","endLine":14,"endColumn":29},{"ruleId":"163","severity":1,"message":"227","line":14,"column":31,"nodeType":"165","messageId":"166","endLine":14,"endColumn":51},"no-unused-vars","'NewSignUpSignIn' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'CourseSelector' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'SignUpComponentMobile' is defined but never used.","'VerificationPage' is defined but never used.","'HomePage' is defined but never used.","'Auth' is defined but never used.","no-native-reassign",["228"],"no-negated-in-lhs",["229"],"'useState' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["230"],"'Router' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useImperativeHandle' is defined but never used.","'needsConfirm' is assigned a value but never used.","'setNeedsConfirm' is assigned a value but never used.","'authCode' is assigned a value but never used.","'setAuthCode' is assigned a value but never used.","'backUpEmail' is assigned a value but never used.","'setBackUpEmail' is assigned a value but never used.",["231"],"'createUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCurrentUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'loadTexts'. Either include it or remove the dependency array.",["232"],"'SignIn' is defined but never used.","'SignUp' is defined but never used.","'id' is assigned a value but never used.","'passHash' is assigned a value but never used.","'createRequestJSON' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.",["233"],"'index' is assigned a value but never used.","'ResetProfessor' is assigned a value but never used.","'submitPass' is assigned a value but never used.","'axios' is defined but never used.","'setTitleText' is assigned a value but never used.","'setDescripText' is assigned a value but never used.","'signUpFailMessage' is assigned a value but never used.","'setSignUpFailMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"234","fix":"239"},"Update the dependencies array to be: [checkUser]",{"range":"240","text":"241"},{"range":"242","text":"241"},"Update the dependencies array to be: [rerun, currentConvo, loadTexts]",{"range":"243","text":"244"},{"range":"245","text":"241"},[215,217],"[checkUser]",[423,425],[4409,4429],"[rerun, currentConvo, loadTexts]",[847,849]]